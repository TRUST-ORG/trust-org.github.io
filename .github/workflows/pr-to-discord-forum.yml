name: PR ‚Üí Discord Forum

on:
  pull_request:
    types: [opened, reopened, ready_for_review, closed]

permissions:
  contents: read
  pull-requests: write  # PR ÏΩîÎ©òÌä∏Ïóê thread_id Ï†ÄÏû•/Í∞±Ïã†Ïö©

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  discord:
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      DISCORD_TAG_PR: ${{ secrets.DISCORD_TAG_PR }}          # Ïã§Ï†ú PR ÌÉúÍ∑∏ ID
      DISCORD_TAG_CLOSED: ${{ secrets.DISCORD_TAG_CLOSED }}  # Ïã§Ï†ú PR-CLOSED ÌÉúÍ∑∏ ID
    steps:
      - name: Validate required secrets
        run: |
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "Error: DISCORD_WEBHOOK_URL secret is required"
            exit 1
          fi
          if [ -z "$DISCORD_BOT_TOKEN" ]; then
            echo "Warning: DISCORD_BOT_TOKEN secret is missing. Bot-only features will be skipped."
          fi

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      # ‚îÄ‚îÄ PR OPENED/REOPENED/READY_FOR_REVIEW ‚Üí Ìè¨Îüº Í∏Ä ÏÉùÏÑ± ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      - name: Build forum-create payload
        if: ${{ github.event.action != 'closed' }}
        run: |
          set -e
          
          TITLE='${{ github.event.pull_request.title }}'
          NUMBER='${{ github.event.pull_request.number }}'
          AUTHOR='${{ github.event.pull_request.user.login }}'
          URL='${{ github.event.pull_request.html_url }}'
          HEAD='${{ github.event.pull_request.head.ref }}'
          BASE='${{ github.event.pull_request.base.ref }}'
          COMMITS='${{ github.event.pull_request.commits }}'
          ADDS='${{ github.event.pull_request.additions }}'
          DELS='${{ github.event.pull_request.deletions }}'
          BODY='${{ github.event.pull_request.body }}'
          
          if [ -z "$BODY" ] || [ "$BODY" = "null" ]; then
            BODY="No description provided."
          fi
          
          FORUM_TITLE="${AUTHOR} - ${TITLE}"
          FORUM_CONTENT="${BODY}

---
**Pull Request Info**
‚Ä¢ **Author:** @${AUTHOR}
‚Ä¢ **PR:** [#${NUMBER}](${URL})
‚Ä¢ **Branch:** \`${HEAD}\` ‚Üí \`${BASE}\`
‚Ä¢ **Stats:** ${COMMITS} commits, +${ADDS}/-${DELS} lines"

          jq -n \
            --arg thread_name "$FORUM_TITLE" \
            --arg content "$FORUM_CONTENT" \
            --argjson applied_tags "[\"$DISCORD_TAG_PR\"]" \
            '{
              thread_name: $thread_name,
              content: $content,
              applied_tags: $applied_tags
            }' > forum_payload.json

          echo "=== Forum Payload ==="
          cat forum_payload.json

      - name: Create forum thread (via Webhook)
        if: ${{ github.event.action != 'closed' }}
        run: |
          set -e
          
          for attempt in 1 2 3; do
            echo "Attempt $attempt to create forum thread..."
            
            if RES=$(curl -sS --fail --max-time 30 \
              -X POST "$DISCORD_WEBHOOK?wait=true" \
              -H "Content-Type: application/json" \
              -d @forum_payload.json 2>&1); then
              echo "$RES" > discord_create_response.json
              break
            else
              echo "Attempt $attempt failed: $RES"
              if [ $attempt -eq 3 ]; then exit 1; fi
              sleep 5
            fi
          done

          THREAD_ID=$(jq -r '.id // empty' discord_create_response.json)
          if [ -z "$THREAD_ID" ]; then
            echo "Failed to obtain thread_id from response:"
            cat discord_create_response.json
            exit 1
          fi
          
          echo "THREAD_ID=$THREAD_ID" >> $GITHUB_ENV
          echo "Successfully created thread with ID: $THREAD_ID"

      - name: Save thread_id on PR (comment)
        if: ${{ github.event.action != 'closed' && env.THREAD_ID != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          MARK="<!-- discord-thread-id -->"
          BODY="${MARK}
Discord Forum Thread ID: ${THREAD_ID}
[View in Discord](https://discord.com/channels/@me/${THREAD_ID})"

          CID=$(gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            --jq '.[] | select(.body | contains("'$MARK'")) | .id' 2>/dev/null || true)

          if [ -n "$CID" ]; then
            gh api "repos/${{ github.repository }}/issues/comments/$CID" \
              -X PATCH -f body="$BODY" >/dev/null
          else
            gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
              -X POST -f body="$BODY" >/dev/null
          fi

      # ‚îÄ‚îÄ PR CLOSED ‚Üí ÏÉÅÌÉúÎåìÍ∏Ä + ÌÉúÍ∑∏Î≥ÄÍ≤Ω + Î¥áÏúºÎ°ú Ïä§Î†àÎìú ÏïÑÏπ¥Ïù¥Î∏å/Ïû†Í∏à ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      - name: Load thread_id from PR comments
        if: ${{ github.event.action == 'closed' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Looking for Discord thread ID in PR comments..."
          THREAD_ID=$(gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            --jq '.[] | select(.body | contains("<!-- discord-thread-id -->")) | .body' 2>/dev/null \
            | grep -o 'Discord Forum Thread ID: [0-9]*' \
            | grep -o '[0-9]*$' \
            | head -n1 || true)
          if [ -z "$THREAD_ID" ]; then
            echo "THREAD_ID=" >> $GITHUB_ENV
          else
            echo "THREAD_ID=$THREAD_ID" >> $GITHUB_ENV
          fi

      - name: Post CLOSED/MERGED status comment (via Webhook)
        if: ${{ github.event.action == 'closed' && env.THREAD_ID != '' }}
        run: |
          set -e
          if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            STATUS="MERGED"; EMOJI="üéâ"
          else
            STATUS="CLOSED"; EMOJI="üîí"
          fi
          ACTOR='${{ github.actor }}'
          URL='${{ github.event.pull_request.html_url }}'
          NUMBER='${{ github.event.pull_request.number }}'
          STATUS_MSG="${EMOJI} **PR #${NUMBER} ${STATUS}**
This pull request has been **${STATUS}** by @${ACTOR}.
[View PR](${URL})"

          for attempt in 1 2 3; do
            if curl -sS --fail --max-time 30 \
              -X POST "$DISCORD_WEBHOOK?thread_id=${THREAD_ID}" \
              -H "Content-Type: application/json" \
              -d "$(jq -n --arg content "$STATUS_MSG" '{content: $content}')"; then
              break
            else
              if [ $attempt -eq 3 ]; then exit 1; fi
              sleep 5
            fi
          done

      - name: Update thread tags to PR-CLOSED (via Bot)
        if: ${{ github.event.action == 'closed' && env.THREAD_ID != '' && env.DISCORD_BOT_TOKEN != '' && env.DISCORD_TAG_CLOSED != '' }}
        run: |
          set -e
          echo "Updating thread tags to PR-CLOSED..."
          curl -sS --fail --max-time 30 \
            -X PATCH "https://discord.com/api/v10/channels/${THREAD_ID}" \
            -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"applied_tags\": [\"$DISCORD_TAG_CLOSED\"]}"

      - name: Archive & lock thread (via Bot)
        if: ${{ github.event.action == 'closed' && env.THREAD_ID != '' && env.DISCORD_BOT_TOKEN != '' }}
        run: |
          set -e
          echo "Archiving and locking thread..."
          curl -sS --fail --max-time 30 \
            -X PATCH "https://discord.com/api/v10/channels/${THREAD_ID}" \
            -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"archived": true, "locked": true}'

      - name: Update PR comment with final status
        if: ${{ github.event.action == 'closed' && env.THREAD_ID != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            STATUS="MERGED"; EMOJI="üéâ"
          else
            STATUS="CLOSED"; EMOJI="üîí"
          fi
          ACTOR='${{ github.actor }}'
          MARK="<!-- discord-thread-id -->"
          BODY="${MARK}
${EMOJI} **Discord Forum Thread Updated**
Thread ID: ${THREAD_ID}
Status: **${STATUS}** by @${ACTOR}
[View in Discord](https://discord.com/channels/@me/${THREAD_ID})"

          CID=$(gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            --jq '.[] | select(.body | contains("'$MARK'")) | .id' 2>/dev/null | head -n1)
          if [ -n "$CID" ]; then
            gh api "repos/${{ github.repository }}/issues/comments/$CID" \
              -X PATCH -f body="$BODY" >/dev/null
          fi
